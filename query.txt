


react - query
데이터 패칭의 편의성을 제공하기 위한 도구
-----
서버와의 통신을 통해 교환된(응답받은) 데이터

1. 너 백엔드에서 받아온 데이터 왜 전역 상태로 관리해?
백엔드의 데이터를 자동으로 전역으로 관리 --- 저장

2. a라는 상태를 A 페이지에서 getFetching 해서 불러왔습니다
   B라는 페이지로 이동 다시 A 페이지로 돌아오면 getFetching 다시?

   ex) A page

        useEffect(()=>{
          dispatch(getodo())
        },[])

   리엑트 쿼리는 키 값으로 내가 요청한 정보의 값을 저장하기 때문에
   불필요한 백엔드 요청을 감소


3. 편의기능제공
   백엔드에서 받아온 데이터를 관리해주는 도구 --> rtk thunk
   const {isloading, isSuccess, error, isError} = useQuery()

-------------------------------------------------------------------

  staleTime (신선한 시간) defaultValue: 0
  gcTime (a컴포넌트에서 데이터) ---> 다른 페이지(사용x)
      ex)
        Todopage -> todos
        main --> todos(x) --- gctime이 흘러갑니다

-------------------------------------------------------------------

npm i react-query (x) - 3점대 구버전 설치
npm i @tanstack/react-query v5 이상

비슷한 라이브러리
SWR, rtk-query, apllo client(gql)

-------------------------------------------------------------------

useQueries 여러개의 쿼리를 동시에 요청
useSuspenseQuery 백엔드에서 데이터를 불러오기 전까지 화면을 보여주지 않는다

-------------------------------------------------------------------
(다음주 1시간 정도) -- typescript

useInfiniteQuery 무한 스크롤링 pages [ [1~10], [11~20], [], []]
낙관전업데이트를 위한
mutaion => onMutate => qc.setQuery(query, (old) => return)

-------------------------------------------------------------------
